name: Build & test EOPFZarr plugin

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    strategy:
      matrix:
        cfg: [Debug, Release]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache APT packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('path/to/lockfile') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install GDAL dev packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
             gdal-bin libgdal-dev cmake ninja-build build-essential
    - name: Configure
      run: |
        cmake -S . -B build/${{ matrix.cfg }} \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.cfg }}
    - name: Build
      run: cmake --build build/${{ matrix.cfg }} --parallel

    - name: Smoke test
      run: |
          export GDAL_DRIVER_PATH=$GITHUB_WORKSPACE/build/${{ matrix.cfg }}
          echo "Checking for EOPFZARR driver in available formats:"
          gdalinfo --formats | grep "EOPFZARR" || echo "EOPFZARR driver not found!"
          # Create a more complete Zarr test dataset
          mkdir -p /tmp/test.zarr
          # Create .zgroup file
          echo '{"zarr_format":2}' > /tmp/test.zarr/.zgroup
          # Create .zattrs with minimal spatial reference
          echo '{"spatial_ref":"EPSG:4326"}' > /tmp/test.zarr/.zattrs
          # Create .zarray with required metadata
          echo '{
          "chunks": [1, 1],
          "compressor": null,
          "dtype": "<f4",
          "fill_value": "NaN",
          "filters": null, 
          "order": "C",
          "shape": [10, 10],
          "zarr_format": 2}' > /tmp/test.zarr/.zarray
          
          # Create a tiny data chunk file
          dd if=/dev/zero of=/tmp/test.zarr/0 bs=4 count=100
          echo "Opening test Zarr dataset:"
          echo "Listing contents of test Zarr dataset:"
          ls -la /tmp/test.zarr/
          # Add debug environment variable to show driver selection
          export CPL_DEBUG=OFF
          echo "Opening with detailed debug info to show driver selection:"
          gdalinfo /tmp/test.zarr | grep -i "driver" || echo "Driver info not found"
          echo "Opening with detailed debug info to show EOPFZarr driver selection:"
          gdalinfo -oo EOPF_PROCESS=YES /tmp/test.zarr | grep -i "driver" || echo "Driver info not found"
          # Show a few lines of actual dataset info
          echo "Sample dataset info (hiding warnings):"
          CPL_LOG_ERRORS=OFF gdalinfo /tmp/test.zarr | head -n 10

    - name: Debug info
      if: failure()
      run: |
        echo "Listing available GDAL drivers:"
        gdalinfo --formats
        echo "Listing contents of the driver path:"
        ls -la $GITHUB_WORKSPACE/build/${{ matrix.cfg }}
        echo "Listing contents of test Zarr dataset:"
        ls -la /tmp/test.zarr/
        echo "GDAL version information:"
        gdalinfo --version

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gdal_EOPFZarr-${{ matrix.cfg }}
        path: build/${{ matrix.cfg }}/gdal_EOPFZarr.so
